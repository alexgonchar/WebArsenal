@model Nop.Web.Models.Common.AddressModel
@using Nop.Web.Framework;
<script type="text/javascript">
	$(function() {
		$("#@Html.FieldIdFor(model => model.CountryId)").change(function() {
			var selectedItem = $(this).val();
			var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
			var statesProgress = $("#states-loading-progress");
			statesProgress.show();
			$.ajax({
				cache:false,
				type: "GET",
				url: "@(Url.Action("GetStatesByCountryId", "Country"))",
				data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
			success: function (data) {
				ddlStates.html('');
				$.each(data, function(id, option) {
					ddlStates.append($('<option></option>').val(option.id).html(option.name));
				});
				statesProgress.hide();
			},
			error:function (xhr, ajaxOptions, thrownError){
				alert('Failed to retrieve states.');
				statesProgress.hide();
			}  
		});
	});
	});
</script>
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.FirstNameDisabled)
@Html.HiddenFor(model => model.LastNameDisabled)
@Html.HiddenFor(model => model.EmailDisabled)
@Html.HiddenFor(model => model.CompanyDisabled)
@Html.HiddenFor(model => model.CountryDisabled)
@Html.HiddenFor(model => model.StateProvinceDisabled)
@Html.HiddenFor(model => model.CityDisabled)
@Html.HiddenFor(model => model.Address1Disabled)
@Html.HiddenFor(model => model.Address2Disabled)
@Html.HiddenFor(model => model.ZipPostalCodeDisabled)
@Html.HiddenFor(model => model.PhoneNumberDisabled)
@Html.HiddenFor(model => model.FaxNumberDisabled)

<fieldset>
	@if (!Model.FirstNameDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.FirstName)
				@Html.ValidationMessageFor(model => model.FirstName)
			</div>
		</div>
 }
	@if (!Model.LastNameDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.LastName, new { @class = "control-label" })
			<div class="controls">
				@Html.TextBoxFor(model => model.LastName, new { @class = "fullname" })
				@Html.ValidationMessageFor(model => model.LastName)
			</div>
		</div>
 }
	@if (!Model.EmailDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.Email, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Email)
				@Html.ValidationMessageFor(model => model.Email)
			</div>
		</div>
 }
	@if (!Model.CompanyDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.Company, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Company)
				@Html.ValidationMessageFor(model => model.Company)
			</div>
		</div>
 }
	@if (!Model.CountryDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.CountryId, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries)
				@Html.ValidationMessageFor(model => model.CountryId)
			</div>
		</div>
 }
	@if (!Model.StateProvinceDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.StateProvinceId, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
				<span id="states-loading-progress" style="display: none;">@T("Common.Wait...")
					<img src='@Url.Content("~/Content/Images/ajax_loader_small.gif")' alt="@T("Common.Wait...")" />
				</span>
				@Html.ValidationMessageFor(model => model.StateProvinceId)
			</div>
		</div>
 }
	@if (!Model.CityDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.City, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.City)
				@Html.ValidationMessageFor(model => model.City)
			</div>
		</div>
 }
	@if (!Model.Address1Disabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.Address1, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Address1)
				@Html.ValidationMessageFor(model => model.Address1)
			</div>
		</div>
 }
	@if (!Model.Address2Disabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.Address2, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Address2)
				@Html.ValidationMessageFor(model => model.Address2)
			</div>
		</div>
 }
	@if (!Model.ZipPostalCodeDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.ZipPostalCode, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.ZipPostalCode)
				@Html.ValidationMessageFor(model => model.ZipPostalCode)
			</div>
		</div>
 }
	@if (!Model.PhoneNumberDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.PhoneNumber)
				@Html.ValidationMessageFor(model => model.PhoneNumber)
			</div>
		</div>
 }
	@if (!Model.FaxNumberDisabled)
 {
		<div class="control-group">
			@Html.LabelFor(model => model.FaxNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.FaxNumber)
				@Html.ValidationMessageFor(model => model.FaxNumber)
			</div>
		</div>
 }
</fieldset>
